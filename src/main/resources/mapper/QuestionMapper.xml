<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.wujiangcai.springboot.database.mapper.QuestionMapper">

    <!-- 映射问题字段 -->
    <resultMap id="QuestionMap" type="Question">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="user_id" property="userId"/>
<!--        <result column="question_user_name" property="userName"/>-->
        <result column="question_user_name" property="accountname"/>
        <result column="avatar" property="avatar"/>  <!-- 问题发布人头像 -->
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="delete_flag" property="deleteFlag"/>
        <result column="questionLikeCount" property="questionLikeCount"/>

        <collection property="answers" ofType="Answer" notNullColumn="answer_id">
            <id column="answer_id" property="answerId"/>
            <result column="related_question_id" property="relatedQuestionId"/>
            <result column="parent_id" property="parentId"/>
            <result column="answer_user_id" property="userId"/>
            <result column="answer_user_name" property="accountname"/>
            <result column="answer_user_avatar" property="avatar"/>  <!-- 新增回答人的头像 -->
            <result column="answer_content" property="answerContent"/>
            <result column="acreate_time" property="acreateTime"/>
            <result column="aupdate_time" property="aupdateTime"/>
            <result column="answer_delete_flag" property="deleteFlag"/>
            <result column="answerLikeCount" property="answerLikeCount"/>
        </collection>
    </resultMap>


    <!-- 查询所有问题 -->
    <select id="findAll" resultMap="QuestionMap">
        SELECT
            id, title, content, user_id, create_time, update_time, delete_flag
        FROM questions
        WHERE delete_flag = 0
        ORDER BY create_time DESC;
    </select>


    <!-- 查询所有问题及其对应的回答，包括用户的ID、姓名和点赞数 -->
    <select id="findAllWithAnswers" resultMap="QuestionMap">
        SELECT
            q.id, q.title, q.content, q.user_id,
            u1.accountname AS question_user_name,  -- 问题发布人姓名
            u1.avatar AS avatar,  -- 新增获取问题发布人头像
            q.create_time, q.update_time, q.delete_flag,
            COALESCE(qlike.like_num, 0) AS questionLikeCount,  -- 问题的点赞数

            a.answer_id, a.related_question_id, a.parent_id,
            a.user_id AS answer_user_id,
            u2.accountname AS answer_user_name,  -- 回答发布人姓名
            u2.avatar AS answer_user_avatar,  -- 新增获取回答发布人头像
            a.answer_content, a.create_time AS acreate_time,
            a.update_time AS aupdate_time, a.delete_flag AS answer_delete_flag,
            COALESCE(alike.like_num, 0) AS answerLikeCount  -- 回答的点赞数

        FROM questions q
                 LEFT JOIN (
            SELECT target_id, COUNT(*) AS like_num
            FROM likes
            WHERE type = 2 AND ldelete_flag = 0  -- type=2 表示问题的点赞
            GROUP BY target_id
        ) AS qlike ON q.id = qlike.target_id

                 LEFT JOIN answers a ON q.id = a.related_question_id

                 LEFT JOIN (
            SELECT target_id, COUNT(*) AS like_num
            FROM likes
            WHERE type = 1 AND ldelete_flag = 0  -- type=1 表示回答的点赞
            GROUP BY target_id
        ) AS alike ON a.answer_id = alike.target_id

                 LEFT JOIN users u1 ON q.user_id = u1.id  -- 获取问题发布人用户名
                 LEFT JOIN users u2 ON a.user_id = u2.id  -- 获取回答发布人用户名

        WHERE q.delete_flag = 0
        ORDER BY q.create_time DESC;
    </select>


    <select id="findByName" resultType="top.wujiangcai.springboot.database.entity.Question"></select>

    <insert id="insertQuestion" parameterType="top.wujiangcai.springboot.database.entity.Question">
        INSERT INTO questions (title, content, user_id) VALUES (#{title}, #{content}, #{userId})
    </insert>

    <select id="findQuestionById" resultMap="QuestionMap">
        SELECT
            q.id, q.title, q.content, q.user_id,
            u1.accountname AS question_user_name,
            u1.avatar AS avatar,  -- 新增获取问题发布人头像
            q.create_time, q.update_time, q.delete_flag,

            -- 将问题的点赞数映射为 questionLikeCount
            COALESCE(question_likes.like_num, 0) AS questionLikeCount,

            a.answer_id, a.related_question_id, a.parent_id,
            a.user_id AS answer_user_id,
            u2.accountname AS answer_user_name,
            u2.avatar AS answer_user_avatar,  -- 新增获取回答发布人头像
            a.answer_content, a.create_time AS acreate_time,
            a.update_time AS aupdate_time, a.delete_flag AS answer_delete_flag,

            -- 将回答的点赞数映射为 answerLikeCount
            COALESCE(answer_likes.like_num, 0) AS answerLikeCount

        FROM questions q
                 LEFT JOIN (
            SELECT target_id, COUNT(*) AS like_num
            FROM likes
            WHERE type = 2 AND ldelete_flag = 0  -- type=2 表示问题的点赞
            GROUP BY target_id
        ) AS question_likes ON q.id = question_likes.target_id

                 LEFT JOIN answers a ON q.id = a.related_question_id

                 LEFT JOIN (
            SELECT target_id, COUNT(*) AS like_num
            FROM likes
            WHERE type = 1 AND ldelete_flag = 0  -- type=1 表示回答的点赞
            GROUP BY target_id
        ) AS answer_likes ON a.answer_id = answer_likes.target_id

                 LEFT JOIN users u1 ON q.user_id = u1.id  -- 获取问题发布人用户名
                 LEFT JOIN users u2 ON a.user_id = u2.id  -- 获取回答发布人用户名

        WHERE q.id = #{id} AND q.delete_flag = 0
        ORDER BY a.create_time ASC;
    </select>

    <update id="updateQuestionById" parameterType="Question">
        UPDATE questions
        SET
            title = #{title},
            content = #{content},
            update_time = NOW()
        WHERE id = #{id} AND delete_flag = 0;
    </update>


    <!-- 逻辑删除问题 -->
    <update id="deleteQuestionById">
        UPDATE questions
        SET delete_flag = 1
        WHERE id = #{id} AND user_id = #{userId};
    </update>

    <!-- 根据用户ID查询该用户的所有问题及其点赞数和回答数 -->
    <select id="findQuestionsByUserId" resultType="top.wujiangcai.springboot.database.entity.Question">
        SELECT
            q.id, q.title, q.content, q.user_id AS userId, q.create_time, q.update_time,
            u.username AS userName,
            (
                SELECT COUNT(*)
                FROM likes l
                WHERE l.target_id = q.id AND l.type = 2 AND l.ldelete_flag = 0
            ) AS questionLikeCount,
            (
                SELECT COUNT(*)
                FROM answers a
                WHERE a.related_question_id = q.id AND a.delete_flag = 0
            ) AS answerCount
        FROM questions q
                 LEFT JOIN users u ON q.user_id = u.id
        WHERE q.user_id = #{userId} AND q.delete_flag = 0
        ORDER BY q.create_time DESC;
    </select>
    <!-- 查询总问题数 -->
    <select id="countQuestions" resultType="long">
        SELECT COUNT(*) FROM questions;
    </select>

</mapper>
